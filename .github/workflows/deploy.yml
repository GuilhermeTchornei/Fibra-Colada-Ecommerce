on:
    push:
      branches:
        - main
name: Build and Deploy on AWS
jobs:
  build:
    runs-on: self-hosted
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create back-end env file
        uses: SpicyPizza/create-envfile@v1.3.1
        with:
          envkey_PORT: ${{secrets.PORT}}
          envkey_DATABASE_URL: ${{secrets.DATABASE_URL}}
          envkey_POSTGRES_USERNAME: ${{secrets.POSTGRES_USER}}
          envkey_POSTGRES_PORT: ${{secrets.POSTGRES_PORT}}
          envkey_POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          envkey_POSTGRES_DB: ${{secrets.POSTGRES_DB}}
          envkey_JWT_SECRET: ${{secrets.JWT_SECRET}}
          directory: projeto22-autoral-back-end/
          file_name: .env
          fail_on_empty: true
      - name: Create front-end env file
        uses: SpicyPizza/create-envfile@v1.3.1
        with:
          envkey_NEXT_PUBLIC_API_URL: ${{secrets.NEXT_PUBLIC_API_URL}}
          directory: projeto22-autoral-front-end/
          file_name: .env.local
          fail_on_empty: true
      - name: Run docker compose down
        run: docker compose down # Não apague os volumes, senão o banco de dados de produção vais er limpo.
      - name: Delete Next docker volume
        run: if docker volume ls --quiet --filter name=fibra-colada-ecommerce_next-volume | grep -q .; then docker volume rm fibra-colada-ecommerce_next-volume; fi
      - name: Delete postgres docker volume
        run: docker volume rm fibra-colada-ecommerce_postgres-volume
      - name: Run docker compose up
        run: docker compose up --build -d